name: Build and Push Images

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Target platforms (comma separated)'
        required: true
        default: 'linux/amd64'
        type: string

env:
  DOCKER_USERNAME: ${{ secrets.CE_DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.CE_DOCKER_PASSWORD }}
  DOCKER_IMAGE: clustereye-api

jobs:
  build-amd64:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    if: contains(github.event.inputs.platforms, 'linux/amd64')
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.CE_GH_PAT }}

      - name: Set Project Version
        run: |
          if [ -f VERSION ]; then
            echo "PROJECT_VERSION=$(cat VERSION)" >> $GITHUB_ENV
          else
            echo "PROJECT_VERSION=latest" >> $GITHUB_ENV
          fi

      - name: Checkout release tag
        uses: actions/checkout@v4
        with:
          ref: v${{ env.PROJECT_VERSION }}
          path: release
          token: ${{ secrets.CE_GH_PAT }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push AMD64 images
        working-directory: release
        env:
          DOCKER_BUILDKIT: 1
        run: |
          # Set image tags
          IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
          IMAGE_TAG="${IMAGE_NAME}:v${PROJECT_VERSION}"
          LATEST_TAG="${IMAGE_NAME}:latest"

          # Build AMD64 platform
          docker buildx build \
            --no-cache \
            --platform linux/amd64 \
            -t "${IMAGE_TAG}" \
            -t "${LATEST_TAG}" \
            -f Dockerfile \
            --push \
            .

          echo "‚úÖ AMD64 build completed"
          echo "üê≥ Images pushed:"
          echo "   - ${IMAGE_TAG}"
          echo "   - ${LATEST_TAG}"