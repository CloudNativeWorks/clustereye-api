# Bu Helm template örneği, chart'ınızın templates/ dizininde olmalı
# Örnek: templates/api-deployment.yaml

{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "clustereye.fullname" . }}-api
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    {{- include "clustereye.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "clustereye.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "clustereye.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: api
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 50051
          protocol: TCP
        env:
        # Database configuration from global values
        - name: DB_HOST
          value: {{ .Values.global.database.host | quote }}
        - name: DB_PORT
          value: {{ .Values.global.database.port | quote }}
        - name: DB_USER
          value: {{ .Values.global.database.username | quote }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "clustereye.fullname" . }}-secrets
              key: database-password
        - name: DB_NAME
          value: {{ .Values.global.database.database | quote }}
        - name: DB_SSLMODE
          value: {{ .Values.global.database.sslMode | quote }}

        # InfluxDB configuration from global values
        - name: INFLUXDB_ENABLED
          value: "true"
        - name: INFLUXDB_URL
          value: {{ .Values.global.influxdb.url | quote }}
        - name: INFLUXDB_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "clustereye.fullname" . }}-secrets
              key: influxdb-token
        - name: INFLUXDB_ORG
          value: {{ .Values.global.influxdb.organization | quote }}
        - name: INFLUXDB_BUCKET
          value: {{ .Values.global.influxdb.bucket | quote }}

        # Additional environment variables
        {{- range $key, $value := .Values.api.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}

        {{- if .Values.api.resources }}
        resources:
          {{- toYaml .Values.api.resources | nindent 10 }}
        {{- end }}

        {{- if .Values.api.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.api.livenessProbe | nindent 10 }}
        {{- end }}

        {{- if .Values.api.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.api.readinessProbe | nindent 10 }}
        {{- end }}

---
# API Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "clustereye.fullname" . }}-api
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    {{- include "clustereye.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  type: {{ .Values.api.service.type }}
  ports:
  - port: {{ .Values.api.service.ports.http }}
    targetPort: http
    protocol: TCP
    name: http
  - port: {{ .Values.api.service.ports.grpc }}
    targetPort: grpc
    protocol: TCP
    name: grpc
  selector:
    {{- include "clustereye.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: api

{{- end }}