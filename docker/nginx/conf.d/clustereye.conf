# ClusterEye Nginx Configuration

# HTTP Server (redirects to HTTPS if enabled)
server {
    listen 80;
    server_name _;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # Redirect to HTTPS if SSL is enabled
    # Uncomment the following lines when SSL is configured
    # return 301 https://$server_name$request_uri;

    # Remove this location block when SSL is enabled
    location / {
        try_files $uri $uri/ @api;
    }

    # API endpoints
    location @api {
        include /etc/nginx/conf.d/api_proxy.conf;
    }

    # API routes
    location /api/ {
        include /etc/nginx/conf.d/api_proxy.conf;
    }

    # Authentication endpoints with rate limiting
    location /auth/ {
        limit_req zone=auth burst=10 nodelay;
        include /etc/nginx/conf.d/api_proxy.conf;
    }

    # Static files for frontend
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Frontend application
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
}

# HTTPS Server (uncomment when SSL certificates are available)
#server {
#    listen 443 ssl http2;
#    server_name _;
#
#    # SSL Configuration
#    ssl_certificate /etc/nginx/ssl/cert.pem;
#    ssl_certificate_key /etc/nginx/ssl/key.pem;
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#    ssl_prefer_server_ciphers off;
#    ssl_session_cache shared:SSL:10m;
#    ssl_session_timeout 10m;
#
#    # HSTS
#    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#    # Health check endpoint
#    location /health {
#        access_log off;
#        return 200 "OK\n";
#        add_header Content-Type text/plain;
#    }
#
#    # API endpoints
#    location /api/ {
#        include /etc/nginx/conf.d/api_proxy.conf;
#    }
#
#    # Authentication endpoints with rate limiting
#    location /auth/ {
#        limit_req zone=auth burst=10 nodelay;
#        include /etc/nginx/conf.d/api_proxy.conf;
#    }
#
#    # Static files for frontend
#    location /static/ {
#        alias /usr/share/nginx/html/static/;
#        expires 1y;
#        add_header Cache-Control "public, immutable";
#    }
#
#    # Frontend application
#    location / {
#        root /usr/share/nginx/html;
#        index index.html;
#        try_files $uri $uri/ /index.html;
#
#        # Security headers
#        add_header X-Frame-Options "SAMEORIGIN" always;
#        add_header X-Content-Type-Options "nosniff" always;
#        add_header X-XSS-Protection "1; mode=block" always;
#        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;
#    }
#}